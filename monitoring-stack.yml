##
# Copyright 2020 @dave-db.com
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
##

##
# * --------------------------------------------------------------------------------
# * Description:
# *        ToDo: # https://github.com/percona/mongodb_exporter#flags
# *              # https://devconnected.com/mongodb-monitoring-with-grafana-prometheus/
# * --------------------------------------------------------------------------------
##

version: "3.3"

services:
  prometheus:
    image: prom/prometheus
    networks:
      - mon-frontend
      - mon-transit
    ports:
      - "9093:9090"
    volumes:
      - /mnt/gv0/monitoring/prometheus/data:/prometheus
    configs:
      - source: prometheus
        target: /etc/prometheus/prometheus.yml
      - source: node_rules
        target: /etc/prometheus/swarm_node.rules.yml
      - source: task_rules
        target: /etc/prometheus/swarm_task.rules.yml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M

  alertmanager:
    image: prom/alertmanager:v0.21.0
    networks:
      - mon-frontend
    ports:
      - "9092:8080"
    volumes:
      - /mnt/gv0/monitoring/alertmanager/data:/alertmanager
    configs:
      - source: alertmanager
        target: /etc/alertmanager/alertmanager.yml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  grafana:
    image: grafana/grafana:7.1.5
    networks:
      - mon-frontend
    ports:
      - "9091:3000"
    volumes: 
      - /mnt/gv0/monitoring/grafana/data:/var/lib/grafana
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    
  cadvisor:
    image: google/cadvisor:v0.33.0
    networks:
      - mon-backend
      - mon-transit
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  node-exporter :       
    image: prom/node-exporter 
    networks:
      - mon-backend
      - mon-transit 
    volumes:       
      - /proc:/host/proc:ro       
      - /sys:/host/sys:ro       
      - /:/rootfs:ro       
    command:       
    - "--path.sysfs=/host/sys"
    - "--path.procfs=/host/proc"
    - "--collector.textfile.directory=/etc/node-exporter/"
    - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
    - "--no-collector.ipvs"     
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  mongodb-exporter:
    image: bitnami/mongodb-exporter:0.11.1
    networks:
      - mon-transit
      - ddb-database
    environment:
      - MONGODB_URI=mongodb://mongodb_exporter:s3cr3tpassw0rd@mongodb_rep-1:27017,mongodb_rep-2:27017,mongodb_rep-3:27017/?authSource=admin

  unsee:
    image: cloudflare/unsee:v0.9.2
    networks:
      - mon-frontend
      - mon-transit
    ports:
      - "9094:8080"
    environment:
      - "ALERTMANAGER_URIS=default:http://alertmanager:9093"
    deploy:
      mode: replicated
      replicas: 1
  
  karma:
    image: lmierzwa/karma:v0.70
    networks:
      - mon-frontend
      - mon-transit
    ports:
      - "9094:8080"
    environment:
      - CONFIG_FILE="docs/karma.yml"
    configs:
      - source: karma
        target: docs/karma.yml
    #healthcheck:
    #  test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
    #  interval: 30s
    #  timeout: 20s
    #  retries: 3

configs:
  prometheus:
    external: true
  alertmanager:
    external: true
  node_rules:
    external: true
  task_rules:
    external: true
  karma:
    external: true

networks:
  mon-transit:
    external: true
  mon-frontend:
    external: true
  mon-backend:
    external: true